{"ID":"1","language":"java","title":"calculate the GCD and LCM of two given numbers","content":"import java.util.Scanner;\npublic class GCD_LCM \n\n{\n    static int gcd(int x, int y)\n    {\n        int r=0, a, b;\n        a = (x &gt; y) ? x : y; // a is greater number\n        b = (x &lt; y) ? x : y; // b is smaller number\n\n        r = b;\n        while(a % b != 0)\n        {\n            r = a % b;\n            a =b;\n            b = r;\n        }\n        return r;\n    }\n\n    static int lcm(int x, int y)\n    {\n        int a;\n        a = (x &gt; y) ? x : y; // a is greater number\n        while(true)\n        {\n            if(a % x == 0 &amp;&amp; a % y == 0)\n                return a;\n            ++a;\n        }\n    }\n\n    public static void main(String args[])\n    {\n        Scanner input = new Scanner(System.in);\n        System.out.println(\"Enter the two numbers: \");\n        int x = input.nextInt();\n        int y = input.nextInt();\n\n        System.out.println(\"The GCD of two numbers is: \" + gcd(x, y));\n        System.out.println(\"The LCM of two numbers is: \" + lcm(x, y));\n        input.close();\n    }\n}\n"} 
{"ID":"2","language":"java","title":"Find the Unique Factorization of a Given Number","content":"//Find the Unique Factorization of a Given Number/n/n/nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\n\n public class Unique_Prime_Factors \n{\n    static Set primeFactors(long number) \n    {\n        long copy = number, i;\n   Set primeFactor = new HashSet&lt;&gt;();\n       for (i = 2; i &lt;= copy; i++) \n       {\n            if (copy % i == 0) \n           {\n               primeFactor.add(i);\n                 copy /= i;\n               i--;\n            }\n        }\n        return primeFactor;\n    }\n\n\n    public static void main(String args[]) \n     {\n         Scanner input = new Scanner(System.in);\n         long n;\n        System.out.println(\"Enter the number: \");\n         n = input.nextLong();\n         System.out.println(\"The Prime Factors of \" + n + \" is: \"\n                             + primeFactors(n));\n     }\n}"}
{"ID":"3","language":"java","title":"Euclid GCD Algorithm","content":"//Euclid GCD Algorithm\n\nfunction gcd(a, b)\n    if b = 0\n       return a\n    else\n       return gcd(b, a mod b)\n\n\nimport java.util.Scanner;\n \n\n/** Class EuclidGcd **/\npublic class EuclidGcd   \n {\n    /** Function to calculate gcd **/\n    public long gcd(long p, long q)\n    {\n        if (p % q == 0)\n            return q;\n        return gcd(q, p % q);\n    }\n    /** Main function **/\n    public static void main (String[] args)\n     {\n\n        Scanner scan = new Scanner(System.in);\n        System.out.println(\"Euclid GCD Algorithm Test\n\");\n        /** Make an object of EuclidGcd class **/\n        EuclidGcd eg = new EuclidGcd();\n \n\n        /** Accept two integers **/\n        System.out.println(\"Enter two integer numbers\n\");\n        long n1 = scan.nextLong();\n        long n2 = scan.nextLong();\n        /** Call function gcd of class EuclidGcd **/\n        long gcd = eg.gcd(n1, n2);\n        System.out.println(\"\nGCD of \"+ n1 +\" and \"+ n2 +\" = \"+ gcd);\n    }\n}\n"}
{"ID":"4","language":"java","title":"Naor-Reingold Pseudo Random Function","content":"//Naor-Reingold Pseudo Random Function\n\nimport java.util.Random;\npublic class Naor_Reingold \n{\n    public static void main(String args[])\n    {\n        int p=7, l=3, g=2, n=4, x;\n        int []a = {1,2,2,1};\n        int []bin = new int[4];\n        Random random = new Random();\n        System.out.println(\"The Random numbers are: \");\n        for(int i=0; i&lt;10; i++)\n        {\n            x = random.nextInt(17);\n            for(int j=3; j&gt;=0; j--)\n            {\n                bin[j] = x%2;\n                x/=2;\n            }\n            int mul = 1;\n            for(int k=0; k&lt;4; k++)\n                mul *= Math.pow(a[k], bin[k]);\n            System.out.println(Math.pow(g, mul));\n        }\n    }\n}"}
{"ID":"5","language":"java","title":"Fermat Primality Test Algorithm","content":"//Fermat Primality Test Algorithm\n\nimport java.util.Scanner;\nimport java.util.Random;\n\n /** Class SolovayStrassen **/\npublic class SolovayStrassen\n{\n    /** Function to calculate jacobi (a/b) **/\n    public long Jacobi(long a, long b)\n    {\n        if (b &lt;= 0 || b % 2 == 0)\n            return 0;\n        long j = 1L;\n        if (a &lt; 0)\n        {\n            a = -a;\n            if (b % 4 == 3)\n                j = -j;\n        }\n        while (a != 0)\n      {\n            while (a % 2 == 0)\n            {\n                a /= 2;\n                if (b % 8 == 3 || b % 8 == 5)\n                    j = -j;\n            }\n \n            long temp = a;\n            a = b;\n            b = temp;\n \n            if (a % 4 == 3 &amp;&amp; b % 4 == 3)\n                j = -j\n            a %= b;\n        }\n        if (b == 1)\n            return j;\n        return 0;\n    }\n    /** Function to check if prime or not **/\n    public boolean isPrime(long n, int iteration)\n    {\n        /** base case **/\n        if (n == 0 || n == 1)\n            return false;\n        /** base case - 2 is prime **/\n        if (n == 2)\n            return true;\n        /** an even number other than 2 is composite **/\n        if (n % 2 == 0)\n            return false;\n \n        Random rand = new Random();\n        for (int i = 0; i &lt; iteration; i++)\n        {\n            long r = Math.abs(rand.nextLong());\n                       long a = r % (n - 1) + 1;\n            long jacobian = (n + Jacobi(a, n)) % n;\n            long mod = modPow(a, (n - 1)/2, n);\n            if(jacobian == 0 || mod != jacobian) \n                return false;\n        }\n        return true;       \n     }\n    /** Function to calculate (a ^ b) % c **/\n    public long modPow(long a, long b, long c)\n    {\n        long res = 1;\n        for (int i = 0; i &lt; b; i++)\n        {\n            res *= a;\n            res %= c; \n        }\n        return res % c;\n    }    \n    /** Main function **/\n    public static void main (String[] args) \n    {\n        Scanner scan = new Scanner(System.in);\n        System.out.println(\"SolovayStrassen Primality Algorithm Test\n\");\n        /** Make an object of SolovayStrassen class **/\n        SolovayStrassen ss = new SolovayStrassen();\n        /** Accept number **/\n        System.out.println(\"Enter number\n\");\n        long num = scan.nextLong();\n        /** Accept number of iterations **/\n        System.out.println(\"\nEnter number of iterations\");\n        intge k = scan.nextInt();\n        /** check if prime **/\n        boolean prime = ss.isPrime(num, k);\n        if (prime)\n            System.out.println(\"\n\"+ num +\" is prime\");\n        else\n            System.out.println(\"\n\"+ num +\" is composite\"); \n           }\n}\n"}
{"ID":"6","language":"java","title":"Regular Falsi Algorithm","content":"//Regular Falsi Algorithm\n\npublic class RegularFalsi\n{\n    /** function to find root for **/\n    public double f(double x)\n    {\n        /** make your own function here but accordingly change (s, t)\n **/\n \n         return Math.cos(x) - x * x * x;\n \n        // return x * x * x - 3 * x + 4;\n        // return Math.cos(x) - 3 * x + 1;\n        // return 2 * x - Math.log(x)/Math.log(10) - 7;\n        // return x * x - Math.log(x) - 12;\n    }\n    /** function to find root **/\n    public double findRoot(double s, double t, double e, int m)\n    {\n        double r = 0.0,fr;\n        int n, side = 0;\n \n        /** starting values at endpoints of interval **/\n        double fs = f(s);\n        double ft = f(t);\n \n        for (n = 0; n &lt; m; n++)\n        {\n \n            r = (fs * t - ft * s) / (fs - ft);\n            if (Math.abs(t - s) &lt; e * Math.abs(t + s)) \n                break;\n            fr = f(r);\n \n            if (fr * ft &gt; 0)\n            {\n                /** fr and ft have same sign, copy r to t **/\n                t = r; \n                ft = fr;\n                if (side == -1) \n                    fs /= 2;\n               side = -1;\n            }\n            else if (fs * fr &gt; 0)\n            {\n                /** fr and fs have same sign, copy r to s **/\n                s = r;  \n                fs = fr;\n                if (side == +1)\n                     ft /= 2;\n                side = +1;\n            }\n            else\n            {\n                /** fr * f_ very small (looks like zero) **/\n                break;\n            } \n        }\n        return r;\n    }\n    /** Main function **/\n    public static void main(String[] args)\n    {\n        System.out.println(\"Regular Falsi Test \");\n \n        RegularFalsi rf = new RegularFalsi();\n        /** lower limit **/\n        double s = 0;\n        /** upper limit **/\n        double t = 1;\n        /** half of upper bound for relative error **/\n        double e = 5E-15;\n        /** number of iterations **/\n        int iterations = 100;\n \n        System.out.println(\"\nRoot : \"+ rf.findRoot(s, t, e, iterations));\n    }\n}"}
{"ID":"7","language":"java","title":"Use rand and srand Functions","content":"//Use rand and srand Functions\n\nimport java.util.Random;\nimport java.util.UUID;\npublic class Rand_and_Srand \n{\n    public static void main(String args[])\n    {\n        System.out.println(\"The numbers using rand\");\n        for(int i=0; i&lt;5; i++)\n        {\n            Random rand = new Random();\n            System.out.println(Math.abs(rand.nextInt()));\n        }\n \n        System.out.println(\"The numbers using srand\");\n        for(int i=0; i&lt;5; i++)\n        {\n \n           System.out.println(Math.abs(UUID.randomUUID().getMostSignificantBits()\n));\n        }\n    }\n}\n"}
{"ID":"8","language":"java","title":"Solovay Strassen Primality Test Algorithm","content":"//Solovay Strassen Primality Test Algorithm\n\nimport java.util.Scanner;\nimport java.util.Random;\n \n/** Class SolovayStrassen **/\npublic class SolovayStrassen\n{\n    /** Function to calculate jacobi (a/b) **/\n    public long Jacobi(long a, long b)\n    {\n        if (b &lt;= 0 || b % 2 == 0)\n            return 0;\n        long j = 1L;\n        if (a &lt; 0)\n        {\n            a = -a;\n            if (b % 4 == 3)\n                j = -j;\n        }\n        while (a != 0)\n        {\n            while (a % 2 == 0)\n            {\n                a /= 2;\n                if (b % 8 == 3 || b % 8 == 5)\n                    j = -j;\n            }\n \n            long temp = a;\n            a = b;\n            b = temp;\n \n            if (a % 4 == 3 &amp;&amp; b % 4 == 3)\n                j = -j;\n            a %= b;\n        }\n        if (b == 1)\n            return j;\n        return 0;\n    }\n    /** Function to check if prime or not **/\n    public boolean isPrime(long n, int iteration)\n    {\n        /** base case **/\n        if (n == 0 || n == 1)\n            return false;\n        /** base case - 2 is prime **/\n        if (n == 2)\n            return true;\n        /** an even number other than 2 is composite **/\n        if (n % 2 == 0)\n            return false;\n \n        Random rand = new Random();\n        for (int i = 0; i &lt; iteration; i++)\n        {\n            long r = Math.abs(rand.nextLong()); \n                       long a = r % (n - 1) + 1;\n            long jacobian = (n + Jacobi(a, n)) % n;\n            long mod = modPow(a, (n - 1)/2, n);\n            if(jacobian == 0 || mod != jacobian) \n                return false;\n        }\n        return true;        \n    }\n    /** Function to calculate (a ^ b) % c **/\n    public long modPow(long a, long b, long c)\n    {\n        long res = 1;\n        for (int i = 0; i &lt; b; i++)\n        {\n            res *= a;\n            res %= c; \n        }\n        return res % c;\n    }    \n    /** Main function **/\n    public static void main (String[] args) \n    {\n        Scanner scan = new Scanner(System.in);\n        System.out.println(\"SolovayStrassen Primality Algorithm Test\n\");\n        /** Make an object of SolovayStrassen class **/\n        SolovayStrassen ss = new SolovayStrassen();\n        /** Accept number **/\n        System.out.println(\"Enter number\n\");\n        long num = scan.nextLong();\n        /** Accept number of iterations **/\n        System.out.println(\"\nEnter number of iterations\");\n        int k = scan.nextInt();\n        /** check if prime **/\n        boolean prime = ss.isPrime(num, k);\n        if (prime)\n            System.out.println(\"\n\"+ num +\" is prime\");\n        else\n            System.out.println(\"\n\"+ num +\" is composite\"); \n           }\n}"}
{"ID":"9","language":"java","title":"Gauss Seidel Method","content":"//Gauss Seidel Method\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n \npublic class Gauss_Seidel \n{\n    public static final int MAX_ITERATIONS = 100; \n     private double[][] M;\n    public Gauss_Seidel(double [][] matrix) { M = matrix; }\n \n    public void print()\n    {\n        int n = M.length;\n        for (int i = 0; i &lt; n; i++) \n        {\n            for (int j = 0; j &lt; n + 1; j++)\n                System.out.print(M[i][j] + \" \");\n            System.out.println();\n        }\n    }\n \n    public boolean transformToDominant(int r, boolean[] V, int[] R)\n    {        int n = M.length;\n        if (r == M.length) \n        {\n            double[][] T = new double[n][n+1];\n            for (int i = 0; i &lt; R.length; i++) \n            {\n                for (int j = 0; j &lt; n + 1; j++)\n                    T[i][j] = M[R[i]][j];\n            }\n \n            M = T;\n \n            return true;\n        }\n \n        for (int i = 0; i &lt; n; i++)\n         {\n            if (V[i]) continue;\n \n            double sum = 0;\n \n            for (int j = 0; j &lt; n; j++)\n                sum += Math.abs(M[i][j]);\n \n            if (2 * Math.abs(M[i][r]) &gt; sum) \n            { // diagonally dominant?\n                V[i] = true;\n                R[r] = i;\n \n                if (transformToDominant(r + 1, V, R))\n                    return true;\n \n                V[i] = false;\n            }\n        }\n \n        return false;\n    }\n \n    public boolean makeDominant()\n    {\n        boolean[] visited = new boolean[M.length];\n        int[] rows = new int[M.length];\n \n        Arrays.fill(visited, false);\n \n        return transformToDominant(0, visited, rows);\n    }\n \n    public void solve()\n    {\n        int iterations = 0;\n        int n = M.length;        double epsilon = 1e-15;\n        double[] X = new double[n]; // Approximations\n        double[] P = new double[n]; // Prev\n        Arrays.fill(X, 0);\n \n        while (true) \n        {\n            for (int i = 0; i &lt; n; i++) \n            {\n                double sum = M[i][n]; // b_n\n \n                for (int j = 0; j &lt; n; j++)\n                    if (j != i)\n                        sum -= M[i][j] * X[j];\n \n        // Update x_i to use in the next row calculation\n                X[i] = 1/M[i][i] * sum;\n            }\n \n            System.out.print(\"X_\" + iterations + \" = {\");\n            for (int i = 0; i &lt; n; i++)\n                System.out.print(X[i] + \" \");\n            System.out.println(\"}\");\n \n            iterations++;\n            if (iterations == 1) \n                continue;\n \n            boolean stop = true;\n            for (int i = 0; i &lt; n &amp;&amp; stop; i++)\n                if (Math.abs(X[i] - P[i]) &gt; epsilon)\n                    stop = false;\n \n            if (stop || iterations == MAX_ITERATIONS) break;\n            P = (double[])X.clone();\n        }\n    }\n \n    public static void main(String[] args) throws IOException\n    {\n        int n;\n        double[][] M;\n \nBufferedReader reader = new BufferedReader(new\n InputStreamReader(System.in));\n        PrintWriter writer = new PrintWriter(System.out, true);\n \n        System.out.println(\"Enter the number of variables in the\n equation:\");\n        n = Integer.parseInt(reader.readLine());\n        M = new double[n][n+1];\n        System.out.println(\"Enter the augmented matrix:\");\n \n        for (int i = 0; i &lt; n; i++)\n         {\n            StringTokenizer strtk = new StringTokenizer(reader.readLine());\n \n            while (strtk.hasMoreTokens())\n                for (int j = 0; j &lt; n + 1 &amp;&amp; strtk.hasMoreTokens(); j++)\n                    M[i][j] = Integer.parseInt(strtk.nextToken());\n        }\n \n \n        Gauss_Seidel gausSeidel = new Gauss_Seidel(M);\n \n        if (!gausSeidel.makeDominant())\n         {\n            writer.println(\"The system isn't diagonally dominant: \" +\n                     \"The method cannot guarantee convergence.\");\n        }\n \n        writer.println();\n        gausSeidel.print();\n        gausSeidel.solve();\n    }\n}\n"}
{"ID":"10","language":"java","title":"Strassen Algorithm","content":"//Strassen Algorithm\n\nimport java.util.Scanner;\n/** Class Strassen **/\npublic class Strassen\n{\n    /** Function to multiply matrices **/\n    public int[][] multiply(int[][] A, int[][] B)\n    {        \n        int n = A.length;\n        int[][] R = new int[n][n];\n        /** base case **/\n        if (n == 1)\n            R[0][0] = A[0][0] * B[0][0];\n        else\n        {\n            int[][] A11 = new int[n/2][n/2];\n            int[][] A12 = new int[n/2][n/2];\n            int[][] A21 = new int[n/2][n/2];\n            int[][] A22 = new int[n/2][n/2];\n            int[][] B11 = new int[n/2][n/2];\n            int[][] B12 = new int[n/2][n/2];\n            int[][] B21 = new int[n/2][n/2];\n            int[][] B22 = new int[n/2][n/2];\n \n            /** Dividing matrix A into 4 halves **/\n            split(A, A11, 0 , 0);\n            split(A, A12, 0 , n/2);\n            split(A, A21, n/2, 0);\n            split(A, A22, n/2, n/2);\n            /** Dividing matrix B into 4 halves **/\n            split(B, B11, 0 , 0);\n            split(B, B12, 0 , n/2);\n            split(B, B21, n/2, 0);\n            split(B, B22, n/2, n/2);\n \n            /** \n              M1 = (A11 + A22)(B11 + B22)\n              M2 = (A21 + A22) B11\n              M3 = A11 (B12 - B22)\n              M4 = A22 (B21 - B11)\n              M5 = (A11 + A12) B22\n              M6 = (A21 - A11) (B11 + B12)\n              M7 = (A12 - A22) (B21 + B22)\n            **/\n \n            int [][] M1 = multiply(add(A11, A22), add(B11, B22));\n            int [][] M2 = multiply(add(A21, A22), B11);\n            int [][] M3 = multiply(A11, sub(B12, B22));\n            int [][] M4 = multiply(A22, sub(B21, B11));\n            int [][] M5 = multiply(add(A11, A12), B22);\n            int [][] M6 = multiply(sub(A21, A11), add(B11, B12));\n            int [][] M7 = multiply(sub(A12, A22), add(B21, B22));\n \n            /**\n              C11 = M1 + M4 - M5 + M7\n              C12 = M3 + M5\n              C21 = M2 + M4\n              C22 = M1 - M2 + M3 + M6\n            **/\n            int [][] C11 = add(sub(add(M1, M4), M5), M7);\n            int [][] C12 = add(M3, M5);\n            int [][] C21 = add(M2, M4);\n            int [][] C22 = add(sub(add(M1, M3), M2), M6);\n \n            /** join 4 halves into one result matrix **/\n            join(C11, R, 0 , 0);\n            join(C12, R, 0 , n/2);\n            join(C21, R, n/2, 0);\n            join(C22, R, n/2, n/2);\n        }\n        /** return result **/ \n           return R;\n    }\n    /** Funtion to sub two matrices **/\n    public int[][] sub(int[][] A, int[][] B)\n    {\n        int n = A.length;\n        int[][] C = new int[n][n];\n        for (int i = 0; i &lt; n; i++)\n            for (int j = 0; j &lt; n; j++)\n                C[i][j] = A[i][j] - B[i][j];\n        return C;\n    }\n    /** Funtion to add two matrices **/\n    public int[][] add(int[][] A, int[][] B)\n    {\n        int n = A.length;\n        int[][] C = new int[n][n];\n        for (int i = 0; i &lt; n; i++)\n            for (int j = 0; j &lt; n; j++)\n                C[i][j] = A[i][j] + B[i][j];\n        return C;\n    }\n    /** Funtion to split parent matrix into child matrices **/\n    public void split(int[][] P, int[][] C, int iB, int jB) \n    {\n        for(int i1 = 0, i2 = iB; i1 &lt; C.length; i1++, i2++)\n            for(int j1 = 0, j2 = jB; j1 &lt; C.length; j1++, j2++)\n                C[i1][j1] = P[i2][j2];\n    }\n    /** Funtion to join child matrices intp parent matrix **/\n    public void join(int[][] C, int[][] P, int iB, int jB) \n    {\n        for(int i1 = 0, i2 = iB; i1 &lt; C.length; i1++, i2++)\n            for(int j1 = 0, j2 = jB; j1 &lt; C.length; j1++, j2++)\n                P[i2][j2] = C[i1][j1];\n    }    \n    /** Main function **/\n    public static void main (String[] args)\n     {\n        Scanner scan = new Scanner(System.in);\n        System.out.println(\"Strassen Multiplication Algorithm Test\n\");\n        /** Make an object of Strassen class **/\n        Strassen s = new Strassen();\n \n        System.out.println(\"Enter order n :\");\n        int N = scan.nextInt();\n        /** Accept two 2d matrices **/\n        System.out.println(\"Enter N order matrix 1\n\");\n        int[][] A = new int[N][N];\n        for (int i = 0; i &lt; N; i++)\n            for (int j = 0; j &lt; N; j++)\n                A[i][j] = scan.nextInt();\n \n        System.out.println(\"Enter N order matrix 2\n\");\n        int[][] B = new int[N][N];\n        for (int i = 0; i &lt; N; i++)\n            for (int j = 0; j &lt; N; j++)\n                B[i][j] = scan.nextInt();\n \n        int[][] C = s.multiply(A, B);\n \n        System.out.println(\"\nProduct of matrices A and  B : \");\n        for (int i = 0; i &lt; N; i++)\n        {\n            for (int j = 0; j &lt; N; j++)\n                System.out.print(C[i][j] +\" \");\n            System.out.println();\n        }\n \n    }\n}\n"}
{"ID":"11","language":"java","title":"Matrix Multiplication","content":"//Matrix Multiplication\n\npackage com.sanfoundry.numerical;\nimport java.util.Scanner;\n \npublic class MatixMultiplication\n{\n    public static void main(String args[])\n    {\n        int n;\n        Scanner input = new Scanner(System.in);\n        System.out.println(\"Enter the base of squared matrices\");\n        n = input.nextInt();\n        int[][] a = new int[n][n];\n        int[][] b = new int[n][n];\n        int[][] c = new int[n][n];\n        System.out.println(\"Enter the elements of 1st martix row wise \n\");\n        for (int i = 0; i &lt; n; i++)\n        {\n            for (int j = 0; j &lt; n; j++)\n            {\n                a[i][j] = input.nextInt();\n            }\n        }\n  System.out.println(\"Enter the elements of 2nd martix row wise \n\");\n        for (int i = 0; i &lt; n; i++)\n        {\n            for (int j = 0; j &lt; n; j++)\n            {\n                b[i][j] = input.nextInt();\n            }\n        }\n        System.out.println(\"Multiplying the matrices...\");\n        for (int i = 0; i &lt; n; i++)\n        {\n            for (int j = 0; j &lt; n; j++)\n            {\n                for (int k = 0; k &lt; n; k++)\n                {\n                    c[i][j] = c[i][j] + a[i][k] * b[k][j];\n                }\n            }\n        }\n        System.out.println(\"The product is:\");\n        for (int i = 0; i &lt; n; i++)\n        {\n            for (int j = 0; j &lt; n; j++)\n            {\n                System.out.print(c[i][j] + \" \");\n            }\n            System.out.println();\n        }\n        input.close();\n    }\n}"}
{"ID":"31","language":"java","title":"Horner Algorithm","content":"//Horner Algorithm import java.util.Scanner;\n\n    public class Horner\n\n    {\n    private int sum;\n     /** constructor **/\n    public Horner(int[] cof, int x)\n    {\n        sum = 0;\n        calcSum(cof, x, cof.length - 1);\n        display();\n    }\n       /** Calculate sum *\n*/\n    private void calcSum(int[] cof, int x, int N)\n    {\n        sum = cof[N] * x;\n        for (int i = N - 1; i &gt;= 1; i--)\n        sum = (sum + cof[i]) * x;\n        sum += cof[0];\n    }\n    public void display()\n    {\n        System.out.println(\"Evaluated sum = \"+ sum);\n    }\n      /** main method **/\n    public static void main(String[] args)\n    {\n        Scanner scan = new Scanner(System.in);\n        System.out.println(\"Horner Algorithm Test\n\");\n        System.out.println(\"Enter highest power\");\n           int n = scan.nextInt();\n           int[] arr = new int[n + 1];\n      System.out.println(\"\nEnter \"+ (n + 1) +\" coefficients in$ increasing order\");\n       for (int i = 0; i &lt;= n; i++)\n           arr[i] = scan.nextInt();\n      System.out.println(\"\nEnter x\");\n      int x = scan.nextInt();\n          Horner h = new Horner(arr, x);\n       }\n     }\n"}
{"ID":"32","language":"python","title":"Convert HTML to PDF with the PDFcrowd API","content":"Convert HTML to PDF with the PDFcrowd API\n\n   import pdfcrowd\n\n    try:\n     # create an API client instance\n\n     # Dummy credentials used; to actually run the program, enter your own.\n           client = pdfcrowd.Client(\"user_name\", \"api_key\")\n           client.setAuthor('author_name')\n\n   # Dummy credentials used; to actually run the program, enter your own.\n         client.setUserPassword('user_password')\n\n    # Convert a web page and store the generated PDF in a file.\n\n        pdf = client.convertURI('http://www.dancingbison.com')\n        with open('dancingbison.pdf', 'wb') as output_file:\n        output_file.write(pdf)\n \n       # Convert a web page and store the generated PDF in a file.\n        pdf = client.convertURI('http://jugad2.blogspot.in/p/about-vasudev-ram.html')\n        with open('jugad2-about-vasudevram.pdf', 'wb') as output_file:\n        output_file.write(pdf)\n\n    # convert an HTML string and save the result to a file\n    output_file = open('html.pdf', 'wb')\n    html = \"My Small HTML File\"\n    client.convertHtml(html, output_file)\n    output_file.close()\n\n    except pdfcrowd.Error, why:\n    print 'Failed:', why\n"}
{"ID":"33","language":"python","title":"Draw Text To Image","content":"Draw Text To Image\n\n   # Draw (Bitmap Font) Text to Image\n      from PIL import Image, ImageDraw, ImageFont\n\n   def reverseColor(r, g, b):\n    return (255 - r, 255 - g, 255 - b)\n   def grayscaleColor(r, g, b):\n    a = (r + g + b) / 3\n    return (a, a, a)\n\n   text = \"Hello World!\"\n  # textColor = (255, 255, 0) # RGB Yellow\n  # textBackgroundColor = (255, 0, 0) # RGB Red\n  textX = 400 # text width in pixels\n  textY = 100 # text height in pixels\n  textTopLeftX = 0\n  textTopLeftY = 0\n\n   # create new image\n   # imgx = 800 # image width in pixels\n   # imgy = 600 # image height in pixels\n   # image = Image.new(\"RGB\", (imgx, imgy))\n\n   # load image\n   image = Image.open(\"input.png\")\n   (imgx, imgy) = image.size$\n   # image = image.resize((imgx, imgy), Image.BICUBIC)\n\n   font = ImageFont.load_default() # load default bitmap font\n   (width, height) = font.getsize(text)\n   textImage = font.getmask(text)\n   pixels = image.load()\n   for y in range(imgy):\n    by = int(height * (y - textTopLeftY) / textY + 0.5)\n    if by &gt;= 0 and by &lt; height:\n        for x in range(imgx):\n            bx = int(width * (x - textTopLeftX) / textX + 0.5)\n            if bx &gt;= 0 and bx &lt; width:\n                if textImage.getpixel((bx, by)) == 0: # text background\n                    # pass # transparent background\n                    # pixels[x, y] = textBackgroundColor\n                    (r, g, b, a) = pixels[x, y]\n                    pixels[x, y] = grayscaleColor(r, g, b)\n                else: # text foreground\n                    # pixels[x, y] = textColor\n                      (r, g, b, a) = pixels[x, y]\n                    pixels[x, y] = reverseColor(r, g, b)\n   image.save(\"output.png\", \"PNG\")\n"}
{"ID":"34","language":"python","title":"Convert a Python AST into an XML file","content":"Convert a Python AST into an XML file\n\n   import ast, re, sys\n     from xml.dom import minidom\n\n   try:\n    from xml.etree import cElementTree as etree\n   except:\n\n    try:\n        from lxml import etree\n    except:\n        from xml.etree import ElementTree as etree\n\n   def prettify(xml_string):\n      reparsed = minidom.parseString(xml_string)\n      return reparsed.toprettyxml(indent=\"  \")\n\n   class ast2xml(ast.NodeVisitor):\n      def __init__(self):\n        super(ast.NodeVisitor, self).__init__()\n        self.path = []\n        self.root = etree.Element('ast')\n        self.celement = self.root\n    def convert(self, tree):\n        self.visit(tree)\n        return etree.tostring(self.root)\n    def generic_visit(self, node):\n        node_name = type(node).__name__\n        self.path.append(node_name)\n        ocelement = self.celement\n        self.celement = etree.SubElement(self.celement, node_name)\n        for item in node.__dict__:\n            if isinstance(getattr(node, item), ast.AST):\n                self.generic_visit(getattr(node, item))\n            elif isinstance(getattr(node, item), list):\n               ocel2 = self.celement\n                self.celement = etree.SubElement(self.celement, item)\n                [self.generic_visit(childnode) for childnode in getattr(node, item)$ if isinstance(childnode, (ast.AST, list))]\n                self.celement = ocel2\n            else:$\n                self.celement.attrib.update({item: str(getattr(node, item))})\n        self.path.pop()\n        self.celement = ocelement\n\n    def main(fpath):\n      with open(fpath, 'r') as f:\n        tree = ast.parse(f.read())\n        res = ast2xml().convert(tree)\n        print prettify(res)\n\n    if __name__ == '__main__':\n    main(sys.argv[1])\n"}
{"ID":"35","language":"python","title":"Image Converter","content":"Image Converter\n\n   # Image Converter\n   # Supported Formats:\n   # http://effbot.org/imagingbook/formats.htm\n\n     from PIL import Image\n     import sys, os\n\n    if len(sys.argv) != 3:\n    print \"USAGE:\"\n    print \"[python] ImageConverter.py InputImageFilePath OutputImageFilePath\"\n    print \"Use quotes if file paths/names contain spaces!\"\n    os._exit(1) # sys.exit()\n\n    InputImageFilePath = sys.argv[1]\n    OutputImageFilePath = sys.argv[2]\n    imageFormat = ((os.path.splitext(OutputImageFilePath)[1])[1 : ]).upper()\n\n    if imageFormat == \"JPG\": imageFormat = \"JPEG\"\n    if imageFormat == \"TIF\": imageFormat = \"TIFF\"\n    image = Image.open(InputImageFilePath)\n    image.save(OutputImageFilePath, imageFormat)\n"}
{"ID":"36","language":"python","title":"IConvert JSON to PDF with Python and xtopdf","content":"Convert JSON to PDF with Python and xtopdf\n\n   import sys\n   import json\n   from PDFWriter import PDFWriter\n\n    def error_exit(message):\n      sys.stderr.write(message)\n      sys.exit(1)\n\n    def JSONtoPDF(json_data):\n    # Get the data values from the JSON string json_data.\n\n    try:\n        data = json.loads(json_data)\n        pdf_filename = data['pdf_filename']\n        font_name = data['font_name']\n        font_size = data['font_size']\n        header = data['header']\n        footer = data['footer']\n        lines = data['lines']\n    except Exception as e:\n        error_exit(\"Invalid JSON data: {}\".format(e.message))\n    # Generate the PDF using the data values.\n    try:\n        with PDFWriter(pdf_filename) as pw:\n            pw.setFont(font_name, font_size)\n            pw.setHeader(header)\n            pw.setFooter(footer)\n            for line in lines:\n                pw.writeLine(line)\n\n     except IOError as ioe:\n     error_exit(\"IOError while generating PDF file: {}\".format(ioe.message))\n     except Exception as e:\n     error_exit(\"Error while generating PDF file: {}\".format(e.message))\n\n     def testJSONtoPDF():\n       fil = open('the-man-in-the-arena.txt')\n       lis = fil.readlines()\n    data = { \\n        'pdf_filename': 'the-man-in-the-arena.pdf', \\n        'font_name': 'Courier', \\n        'font_size': 12, \\n        'header': 'The Man in the Arena', \\n  'footer': 'Generated by xtopdf - http://google.com/search?q=xtopdf', \\n        'lines': lis \\n        }\n\n    json_data = json.dumps(data)\n    JSONtoPDF(json_data)\n    \n     def main():\n       testJSONtoPDF() \n\n   if __name__ == '__main__':\n    main()\n"}
{"ID":"81","language":"c#","title":"Generate Fibonacci Series","content":"Generate Fibonacci Series \n\n   using System;\n   using System.Collections.Generic;\n   using System.Linq;\n    using System.Text;\n\n       namespace fibonaci\n   {\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int i, count, f1 = 0, f2 = 1, f3 = 0;\n            Console.Write(\"Enter the Limit : \");\n            count = int.Parse(Console.ReadLine());\n            Console.WriteLine(f1);\n            Console.WriteLine(f2);\n            for (i = 0; i &lt;= count; i++)\n            {\n                f3 = f1 + f2;\n                Console.WriteLine(f3);\n                f1 = f2;\n                f2 = f3;\n            }\n            Console.ReadLine();\n\n         }\n    }\n }"}
{"ID":"82","language":"c#","title":"Generate the Factorial of  Given Number","content":"Generate the Factorial of  Given Number\n\n     using System;\n     using System.Collections.Generic;\n     using System.Linq;\n     using System.Text;\n\n  namespace factorial\n  {\n       class Program\n      {\n        static void Main(string[] args)\n        {\n            int i, number, fact;\n            Console.WriteLine(\"Enter the Number\");\n            number = int.Parse(Console.ReadLine());\n            fact = number;\n            for (i = number - 1; i &gt;= 1; i--)\n            {\n                fact = fact * i;\n\n            }            Console.WriteLine(\"\nFactorial of Given Number is: \"+fact);\n            Console.ReadLine();\n\n         }\n    }\n}"}
{"ID":"83","language":"c#","title":"Generate the Sum of N Numbers","content":"Generate the Sum of N Numbers\n\n     using System;\n     using System.Collections.Generic;\n     using System.Linq;\n      using System.Text;\n\n  namespace program\n   {\n      class Program\n    {\n        static void Main(string[] args)\n        {\n            int i, sum = 0,n;\n            Console.Write(\"Enter the Nth Number : \");\n            n = int.Parse(Console.ReadLine());\n           for (i = 0; i &lt;= n; i++)\n            {\n                sum = sum + i;\n            }\n            Console.WriteLine(\"\nSum of N Numbers : \" + sum);\n            Console.ReadLine();\n\n         }\n    }\n}"}
{"ID":"84","language":"c#","title":"Calculate Simple Interest","content":"Calculate Simple Interest\n\nusing System;\nnamespace Interest\n{\n class Program\n {\n static void Main(string[] args)\n {\n     int year;\n     double princamt,rate, interest, total_amt;\n     Console.Write(\"Enter The Loan Amount : \");\n     princamt = Convert.ToDouble(Console.ReadLine());\n     Console.Write(\"Enter The Number of Years : \");\n     year = Convert.ToInt16(Console.ReadLine());\n     Console.Write(\"Enter the Rate Of Interest : \");\n     rate = Convert.ToDouble(Console.ReadLine());\n     interest = princamt * year * rate / 100;\n     total_amt = princamt + interest;\n     Console.WriteLine(\"Total Amount : {0}\", total_amt);\n     Console.ReadLine();\n }\n }\n}\n"}
{"ID":"85","language":"c#","title":"Calculate Period Duration","content":"Calculate Period Duration\n\nusing System;\nclass CompareDates\n{\n \n    public static void Main()\n    {\n        DateTime today = DateTime.Now;\n        DateTime yesterday = today - new TimeSpan(1, 0, 0, 0);\n        DateTime tomorrow = today + new TimeSpan(1, 0, 0, 0);\n        Console.WriteLine(\"Yesterday was     {0}\", yesterday);\n        Console.WriteLine(\"Today     is      {0}\", today);\n        Console.WriteLine(\"Tomorrow  will be {0}\", tomorrow);\n        Console.WriteLine(\"\nIs yesterday less than today?   {0}.\",\n           yesterday &lt; today);\n        Console.WriteLine(\"Is today the same as tomorrow ? {0}.\",\n           today == tomorrow);\n \n        TimeSpan totalTimespan = new TimeSpan(3, 5, 24, 17) +\n                                 new TimeSpan(1, 18, 35, 43);\n        Console.WriteLine(\n           \"\nThe length of the period is {0} days {1} hours\" +\n           \" {2} minutes {3} seconds.\",\n           totalTimespan.Days, totalTimespan.Hours,\n           totalTimespan.Minutes, totalTimespan.Seconds);\n        Console.ReadLine();\n    }\n\n\n}"}
{"ID":"86","language":"c#","title":"Find Square Root of a Given Number","content":"Find Square Root of a Given Number\n\nusing System;\nusing System.Text;\nusing System.Collections;\nusing System.Data;\nnamespace Cons\n{\n    public class squareroot\n    {\n        public static void Main()\n        {\n                Console.WriteLine(\"Enter a Number : \");\n                int Number = Convert.ToInt16(Console.ReadLine());\n                double SqrtNumber = Math.Sqrt(Number);\n                Console.WriteLine(\"Square root of {0} is: {1}\", Number, SqrtNumber);\n                Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"87","language":"c#","title":"Calculate Area and Volume of a Cone","content":"Calculate Area and Volume of a Cone\n\nusing System;\nusing System.IO;\nclass program\n{\n    public static void Main()\n    {\n        double r, h, surface_area, volume;\n        double PI = 3.14;\n        Console.WriteLine(\"Enter the Radius and Height of a cone : \");\n        r = Convert.ToDouble(Console.ReadLine());\n        h = Convert.ToDouble(Console.ReadLine());\n        surface_area = PI * r * (r + Math.Sqrt(r * r + h * h));\n        volume = (1.0 / 3) * PI * r * r * h;\n        Console.WriteLine(\"Surface Area of cone is : {0} \", surface_area);\n        Console.WriteLine(\"Volume of Cone is : {0}\", volume);\n        Console.Read();\n    }\n}"}
{"ID":"88","language":"c#","title":"Check the Edge Values in Power Function","content":"Check the Edge Values in Power Function\n\nusing System;\nclass Program\n{\n    static void Main()\n    {\n        double value1 = Math.Pow(double.MinValue, double.MaxValue);\n        double value2 = Math.Pow(double.MinValue, 0);\n        double value3 = Math.Pow(double.NaN, 2);\n        double value4 = Math.Pow(double.PositiveInfinity, 2);\n        double value5 = Math.Pow(double.NegativeInfinity, 2);\n        Console.WriteLine(\"Result : {0}\", value1);\n        Console.WriteLine(\"Result : {0}\", value2);\n        Console.WriteLine(\"Result : {0}\", value3);\n        Console.WriteLine(\"Result : {0}\", value4);\n        Console.WriteLine(\"Result : {0}\", value5);\n        Console.ReadLine();\n    }\n}"}
{"ID":"89","language":"c#","title":"Calculate Compound Interest","content":"Calculate Compound Interest\n\nusing System;\nnamespace compund\n{\n    class compound\n    {\n        static void Main(string[] args)\n        {\n            double Total = 0, interestRate, years, annualCompound, Amount;\n            Console.Write(\"Enter the Initial Amount : \");\n            Amount = Convert.ToDouble(Console.ReadLine());\n            Console.Write(\"Enter the Rate of Interest : \");\n            interestRate = Convert.ToDouble(Console.ReadLine()) / 100;\n            Console.Write(\"Enter the Number of Years : \");\n            years = Convert.ToDouble(Console.ReadLine());\n            Console.Write(\"Number of Times the Interest will be Compounded : \");\n            annualCompound = Convert.ToDouble(Console.ReadLine());\n            for (int t = 1; t &lt; years + 1; t++)\n            {\n                Total = Amount * Math.Pow((1 + interestRate / annualCompound), (annualCompound * t));\n                Console.Write(\"Your Total for Year {0} \" \n                           + \"is {1:F0}. \n\", t, Total);\n \n            }\n \n            Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"90","language":"c#","title":"Calculate the power exponent value","content":"Calculate the power exponent value\n\nusing System;\nclass Program\n{\n    static void Main()\n    {\n \n        double m, n;\n        Console.WriteLine(\"Enter the Number : \");\n        m = double.Parse(Console.ReadLine());\n        Console.WriteLine(\"Enter the Exponent : \");\n        n = double.Parse(Console.ReadLine());\n        double value1 = Math.Pow(m, n);\n        Console.WriteLine(\"Result : {0}\", value1);\n        Console.ReadLine();\n    }\n}\n"}
{"ID":"91","language":"c#","title":"Calculate the Distance Travelled by Reading Speed and Time","content":"Calculate the Distance Travelled by Reading Speed and Time\n\nusing System;\nclass program\n{\n    public static void Main()\n    {\n        int speed, distance, time;\n        Console.WriteLine(\"Enter the Speed(km/hr) : \");\n        speed = Convert.ToInt32(Console.ReadLine());\n        Console.WriteLine(\"Enter the Time(hrs) : \");\n        time = Convert.ToInt32(Console.ReadLine());\n        distance = speed * time;\n        Console.WriteLine(\"Distance Travelled (kms) : \" + distance);\n        Console.ReadLine();\n    }\n}\n"}
{"ID":"92","language":"c#","title":"Find the Sum of two Binary Numbers","content":"Find the Sum of two Binary Numbers \n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nnamespace ConsoleApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int b1, b2;\n            int i = 0, rem = 0;\n            int[] sum = new int[20];\n            Console.WriteLine(\"Enter the first binary number: \");\n            b1 = int.Parse(Console.ReadLine());\n            Console.WriteLine(\"Enter the second binary number: \");\n            b2 = int.Parse(Console.ReadLine());\n            while (b1 != 0 || b2 != 0)\n            {\n                sum[i++] = (b1 % 10 + b2 % 10 + rem) % 2;\n                rem = (b1 % 10 + b2 % 10 + rem) / 2;\n                b1 = b1 / 10;\n                b2 = b2 / 10;\n            }\n            if (rem != 0)\n                sum[i++] = rem;\n            --i;\n            Console.WriteLine(\"Sum of two binary numbers: \");\n            while (i &gt;= 0)\n                Console.Write(\"{0}\", sum[i--]);\n            Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"93","language":"c#","title":"Add Two Dates","content":"Add Two Dates \n\nusing System;\nnamespace DateAndTime\n{\n    class Program\n    {\n        static int Main()\n        {\n            DateTime SDate = new DateTime(2010, 10, 7);\n            Console.WriteLine(\"Starting Date : {0}\", SDate);\n            DateTime EDate = startDate.AddDays(10);\n            Console.WriteLine(\"Ending Date   : {0}\n\", EDate);\n            Console.ReadLine();\n            return 0;\n        }\n    }\n}\n"}
{"ID":"94","language":"c#","title":"Perform Matrix Addition","content":"Perform Matrix Addition \n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n \nnamespace ConsoleApplication8\n{\n    class Program\n    {\n        public static void Main(string[] args)\n        {\n            int m, n,i,j;\n            Console.Write(\"Enter Number Of Rows And Columns Of Matrices A and B : \");\n            m = Convert.ToInt16(Console.ReadLine());\n            n = Convert.ToInt16(Console.ReadLine());\n            int[,] A = new int[10, 10];\n            Console.Write(\"\nEnter The First Matrix : \");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    A[i, j] = Convert.ToInt16(Console.ReadLine());\n                }\n            }\n \n            int[,] B = new int[10, 10];\n            Console.Write(\"\nEnter The Second Matrix:\");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    B[i, j] = Convert.ToInt16(Console.ReadLine());\n                }\n            }\n            Console.Clear();\n            Console.WriteLine(\"\nMatrix A : \");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    Console.Write(A[i, j] + \"\t\");\n \n                }\n                Console.WriteLine();\n            }\n            Console.WriteLine(\"\nMatrix B: \");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    Console.Write(B[i, j] + \"\t\");\n \n                }\n                Console.WriteLine();\n            }\n            int[,] C = new int[10, 10];\n            for (i = 0; i &lt; m; i++)\n           {\n                for (j = 0; j &lt; n; j++)\n                {\n                    C[i, j] = A[i, j] + B[i, j];\n                }\n            }\n            Console.Write(\"\nSum Matrix :\");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    Console.Write(C[i, j] + \"\t\");\n \n                }\n                Console.WriteLine();\n            }\n            Console.Read();\n        }\n    }\n}\n"}
{"ID":"95","language":"c#","title":"Generate the Transpose of a Given Matrix","content":"Generate the Transpose of a Given Matrix\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n \nnamespace Program\n{\n    class Program\n    {\n        public static void Main(string[] args)\n        {\n            int m, n, i, j;\n            Console.Write(\"Enter the Order of the Matrix : \");\n            m = Convert.ToInt16(Console.ReadLine());\n            n = Convert.ToInt16(Console.ReadLine());\n            int[,] A = new int[10, 10];\n            Console.Write(\"\nEnter The Matrix Elements : \");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    A[i, j] = Convert.ToInt16(Console.ReadLine());\n                }\n            }\n            Console.Clear();\n            Console.WriteLine(\"\nMatrix A : \");\n            for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    Console.Write(A[i, j] + \"\t\");\n \n                }\n                Console.WriteLine();\n            }\n            Console.WriteLine(\"Transpose Matrix : \");\n \n           for (i = 0; i &lt; m; i++)\n            {\n                for (j = 0; j &lt; n; j++)\n                {\n                    Console.Write(A[j, i] + \"\t\");\n \n                }\n                Console.WriteLine();\n            }\n            Console.Read();\n        }\n    }\n}\n"}
{"ID":"96","language":"c#","title":"Display the ATM Transaction","content":"Display the ATM Transaction\n\nusing System;\nclass program\n{\n    public static void Main()\n    {\n \n        int amount = 1000, deposit, withdraw;\n        int choice, pin = 0, x = 0;\n        Console.WriteLine(\"Enter Your Pin Number \");\n        pin = int.Parse(Console.ReadLine());\n        while (true)\n        {\n            Console.WriteLine(\"********Welcome to ATM Service**************\n\");\n            Console.WriteLine(\"1. Check Balance\n\");\n            Console.WriteLine(\"2. Withdraw Cash\n\");\n            Console.WriteLine(\"3. Deposit Cash\n\");\n            Console.WriteLine(\"4. Quit\n\");\n            Console.WriteLine(\"*********************************************\n\n\");\n            Console.WriteLine(\"Enter your choice: \");\n            choice = int.Parse(Console.ReadLine());\n            switch (choice)\n            {\n            case 1:\n                Console.WriteLine(\"\n YOUR BALANCE IN Rs : {0} \", amount);\n                break;\n            case 2:\n                Console.WriteLine(\"\n ENTER THE AMOUNT TO WITHDRAW: \");\n                withdraw = int.Parse(Console.ReadLine());\n                if (withdraw % 100 != 0)\n                {\n                    Console.WriteLine(\"\n PLEASE ENTER THE AMOUNT IN MULTIPLES OF 100\");\n                }\n                else if (withdraw &gt; (amount - 500))\n                {\n                    Console.WriteLine(\"\n INSUFFICENT BALANCE\");\n                }\n                else\n                {\n                    amount = amount - withdraw;\n                    Console.WriteLine(\"\n\n PLEASE COLLECT CASH\");\n                    Console.WriteLine(\"\n YOUR CURRENT BALANCE IS {0}\", amount);\n                }\n                break;\n            case 3:\n                Console.WriteLine(\"\n ENTER THE AMOUNT TO DEPOSIT\");\n                deposit = int.Parse(Console.ReadLine());\n                amount = amount + deposit;\n                Console.WriteLine(\"YOUR BALANCE IS {0}\", amount);\n                break;\n            case 4:\n                Console.WriteLine(\"\n THANK U USING ATM\");\n            break;\n            }\n        }\n        Console.WriteLine(\"\n\n THANKS FOR USING OUT ATM SERVICE\");\n    }\n }\n"}
{"ID":"97","language":"c#","title":"Generate Random Numbers","content":"Generate Random Numbers\n\nusing System;\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"Some Random Numbers that are generated are : \");\n        for (int i = 1; i &lt; 10; i++)\n        {\n            Randfunc();\n        }\n    }\n    static Random r = new Random();\n    static void Randfunc()\n    {\n        int n = r.Next();\n        Console.WriteLine(n);\n        Console.ReadLine();\n    }\n}\n"}
{"ID":"98","language":"c#","title":"Calculate Acceleration","content":"Calculate Acceleration\n\nusing System;\nclass program\n{\n    static void Main(string[] args)\n    {\n        int v, t, acc;\n        Console.WriteLine(\"Enter the Velocity : \");\n        v = int.Parse(Console.ReadLine());\n        Console.WriteLine(\"Enter the Time : \");\n        t = int.Parse(Console.ReadLine());\n        acc = v / t;\n        Console.WriteLine(\"Acceleration : {0}\", acc);\n    }\n}\n"}
{"ID":"99","language":"c#","title":"Implement PhoneBook","content":"Implement PhoneBook\n\nusing System;\nusing System.Collections;\nusing System.IO;\nclass PhoneBook\n{\n\n    static void Main(string[] arg)\n    {\n        Hashtable tab = new Hashtable();\n        string fileName;\n        if\n        { \n            (arg.Length &gt; 0) fileName = arg[0];\n        } \n        else\n        { \n            fileName = \"phoneBook.txt\";\n        }\n        StreamReader r = File.OpenText(fileName);\n        string line = r.ReadLine();  \n        while (line != null)\n        {\n            int pos = line.IndexOf('=');\n            string name = line.Substring(0, pos).Trim();\n            long phone = Convert.ToInt64(line.Substring(pos + 1));\n            tab[name] = phone;\n            line = r.ReadLine();\n        }\n        r.Close();\n        for (; ; )\n        { \n            Console.Write(\"Name : \");\n            string name = Console.ReadLine().Trim();\n            if (name == \"\") \n                break;\n            object phone = tab[name];\n            if (phone == null)\n                Console.WriteLine(\"-- Not Found in Phone Book\");\n            else\n                Console.WriteLine(phone);\n        }\n    }\n}\n"}
{"ID":"100","language":"c#","title":"Display Squarefeet of a House","content":"Display Squarefeet of a House\n\nusing System;\nclass pgm\n{\n    public static void Main()\n    {\n        int length, width, area;\n        Console.Write (\"Enter length of room in feet: \");\n        length = Convert.ToInt32 (Console.ReadLine());\n        Console.Write ( \"Enter width of room in feet:\");\n        width = Convert.ToInt32(Console.ReadLine());\n        area = length * width;\n        Console.WriteLine (\"Floor is \" + area +  \" square feet.\");\n        Console.ReadLine();\n    }\n}\n"}
{"ID":"101","language":"c#","title":"Reverse a String with Predefined Function","content":"Reverse a String with Predefined Function\n\nusing System;\nclass linSearch\n{\n    public static void Main()\n    {\n        Console.WriteLine(\"Enter Number of Elements you Want to Hold in the Array ? \");\n        string s = Console.ReadLine();\n        int x = Int32.Parse(s);\n        int[] a = new int[x];\n        Console.WriteLine(\"\n Enter Array Elements : \");\n        for (int i = 0; i &lt; x; i++)\n        {\n            string s1 = Console.ReadLine();\n            a[i] = Int32.Parse(s1);\n        }\n \n        Array.Reverse(a);\n        Console.WriteLine(\"Reversed Array : \");\n        for (int i = 0; i &lt; x; i++)\n        {\n            Console.WriteLine(\"Element {0} is {1}\", i + 1, a[i]);\n        }\n        Console.Read();\n    }\n}\n"}
{"ID":"102","language":"c#","title":"Sort a String using Predefined Function","content":"Sort a String using Predefined Function\n\nusing System;\nclass linSearch\n{\n    public static void Main()\n    {\n        Console.WriteLine(\"Enter Number of Elements you Want to Hold in the Array ? \");\n        string s = Console.ReadLine();\n        int x = Int32.Parse(s);\n        int[] a = new int[x];\n        Console.WriteLine(\"Enter Array Elements :\");\n        for (int i = 0; i &lt; x; i++)\n        {\n            string s1 = Console.ReadLine();\n            a[i] = Int32.Parse(s1);\n        }\n        Array.Sort(a);\n        Console.WriteLine(\"Sorted Array : \");\n        for (int i = 0; i &lt; x; i++)\n        {\n            Console.WriteLine(\"{0}\",a[i]);\n        }\n        Console.Read();\n    }\n}\n"}
{"ID":"103","language":"c#","title":"Find Sum of Digits of a Number using Recursion","content":"Find Sum of Digits of a Number using Recursion\n\nusing System;\nclass program\n{\n    public static void Main()\n{\n    int num, result;\n    pro pg = new pro();\n    Console.WriteLine(\"Enter the Number : \");\n    num=int.Parse(Console.ReadLine());\n    result =pg.sum(num);\n    Console.WriteLine(\"Sum of Digits in {0} is {1}\", num, result);\n    Console.ReadLine();\n}\n}\nclass pro\n{\n    public int sum(int num)\n    {\n        if (num != 0)\n        {\n            return (num % 10 + sum(num / 10));\n        }\n        else\n        {\n            return 0;\n        }\n    }\n}\n"}
{"ID":"104","language":"c#","title":"Create Anonymous Method","content":"Create Anonymous Method\n\nusing System;\ndelegate void Print(string s);\nclass TestClass\n{\n    static void Main()\n    {\n        Print obj = delegate(string j)\n        {\n            System.Console.WriteLine(j);\n        };\n        obj(\"Delegate Using the Anonymous Method\");\n        obj = new Print(TestClass.named);\n        obj(\"Delegate Using the Named Method\");\n        Console.Read();\n    } \n    static void named(string k)\n    {\n        System.Console.WriteLine(k);\n    }\n \n}\n"}
{"ID":"105","language":"c#","title":"Implement Static Method","content":"Implement Static Method\n\nusing System;\nclass Program\n{\n    static void stamethod()\n    {\n        Console.WriteLine(\"Static Method\");\n    }\n    void MethodB()\n    {\n        Console.WriteLine(\"Instance Method\");\n    }\n    static char stamethod2()\n    {\n        Console.WriteLine(\"Static Method\");\n        return 'C';\n    }\n    static void Main()\n    {\n        Program.stamethod();\n        Console.WriteLine(Program.stamethod2());\n        Program programInstance = new Program();\n        programInstance.MethodB();\n        Console.Read();\n    }\n}\n"}
{"ID":"106","language":"c#","title":"Implement Namespaces","content":"Implement Namespaces\n\nusing System;\nnamespace Sanfoundry.Csharp.Codes\n{\n    class TestClass\n    {\n        public TestClass()\n        {\n            Console.WriteLine(\"Class to Demonstrate Namespace\");\n        }\n    }\n}\nclass MyClient\n{\n    public static void Main()\n    {\n        Sanfoundry.Csharp.Codes.TestClass mc = new Sanfoundry.Csharp.Codes.TestClass();\n        Console.ReadLine();\n    }\n}\n"}
{"ID":"107","language":"c#","title":"Perform Binary to Decimal Conversion","content":"Perform Binary to Decimal Conversion\n\nusing System;\nusing System.Collections.Generic;\nusing System.Text;\n \nnamespace Program\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int num, binary_val, decimal_val = 0, base_val = 1, rem;\n            Console.Write(\"Enter a Binary Number(1s and 0s) : \");\n            num = int.Parse(Console.ReadLine()); /* maximum five digits */\n            binary_val = num;\n            while (num &gt; 0)\n            {\n                rem = num % 10;\n                decimal_val = decimal_val + rem * base_val;\n                num = num / 10 ;\n                base_val = base_val * 2;\n            }\n            Console.Write(\"The Binary Number is : \"+binary_val);\n            Console.Write(\"\nIts Decimal Equivalent is : \"+decimal_val);\n            Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"108","language":"c#","title":"Perform Celsius to Fahrenheit Conversion","content":"Perform Celsius to Fahrenheit Conversion\n\n   using System;\n   using System.Collections.Generic;   using System.Linq;\n   using System.Text;\n    namespace program \n   {\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int celsius, faren; \n            Console.WriteLine(\"Enter the Temperature in Celsius(*C) : \");\n            celsius = int.Parse(Console.ReadLine());\n            faren = (celsius * 9) / 5 + 32;\n            Console.WriteLine(\"0Temperature in Fahrenheit is(*F) : \" + faren);\n            Console.ReadLine();\n\n          }\n     }\n  }"}
{"ID":"109","language":"c#","title":"Create a Gray Code","content":"Create a Gray Code\n\nusing System;\npublicclass Gray\n{\n    public static ulong grayEncode(ulong n)\n    {\n        return n ^ (n &gt;&gt; 1);\n    }\n \n    public static ulong grayDecode(ulong n)\n    {\n        ulong i = 1 &lt;&lt; 8 * 64 - 2; //long is 64-bit\n        ulong p, b = p = n &amp; i;\n \n        while ((i &gt;&gt;= 1) &gt; 0)\n            b |= p = n &amp; i ^ p &gt;&gt; 1;\n        return b;\n    }\n \n    public static void Main(string[] args)\n    {\n        Console.WriteLine(\"Number\tGray\");\n        for (ulong i = 0; i &lt; 10; i++)\n        {\n            Console.WriteLine(string.Format(\"{0}\t{1}\", i, Convert.ToString((long)grayEncode(i), 2)));\n \n        }\n        Console.Read();\n    }\n}\n"}
{"ID":"110","language":"c#","title":"Covert HexaDecimal Number to Decimal","content":"Covert HexaDecimal Number to Decimal\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n \nnamespace ConsoleApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string Input;\n            Console.WriteLine(\"Enter a Hexadecimal Number :\");\n            Input = Console.ReadLine();\n            int Output = int.Parse(Input, System.Globalization.NumberStyles.HexNumber);\n            Console.WriteLine(\"The Decimal value is \" + Output);\n            Console.Read();\n        }\n    }\n}\n"}
{"ID":"111","language":"c#","title":"Convert Digits to Words","content":"Convert Digits to Words\n\nusing System; \npublic class ConvertDigitsToWords\n{   \n  public static void Main()\n  { \n    int num; \n    int nextdigit; \n    int numdigits; \n    int[] n = new int[20]; \n \n    string[] digits = { \"zero\", \"one\", \"two\", \n                        \"three\", \"four\", \"five\", \n                        \"six\", \"seven\", \"eight\", \n                        \"nine\" }; \n \n \n    Console.WriteLine(\"Enter the number\");\n    num = Convert.ToInt32(Console.ReadLine());\n    Console.WriteLine(\"Number: \" + num); \n    Console.Write(\"Number in words: \");   \n     nextdigit = 0; \n    numdigits = 0; \n    do \n    { \n      nextdigit = num % 10; \n      n[numdigits] = nextdigit; \n      numdigits++; \n      num = num / 10; \n    } while(num &gt; 0); \n    numdigits--; \n    for( ; numdigits &gt;= 0; numdigits--) \n        Console.Write(digits[n[numdigits]] + \" \"); \n    Console.WriteLine();\n    Console.ReadLine();\n  }   \n\n"}
{"ID":"112","language":"c#","title":"Convert Fahrenheit to Celsius","content":"Convert Fahrenheit to Celsius using System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n \nnamespace Celsius\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            double celsius;\n            Console.Write(\"Enter Fahrenheit temperature : \");\n            double fahrenheit = Convert.ToDouble(Console.ReadLine());\n            celsius = (fahrenheit - 32) * 5 / 9;\n            Console.WriteLine(\"The converted Celsius temperature is\" + celsius);\n            Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"113","language":"c#","title":"Convert Decimal to Binary","content":"Convert Decimal to Binary \n\nusing System;\nclass myclass\n{\n    static void Main()\n    {\n        int num;\n        Console.Write(\"Enter a Number : \");\n        num = int.Parse(Console.ReadLine());\n        int quot;\n        string rem = \"\";\n        while (num &gt;= 1)\n        {\n            quot = num / 2;\n            rem += (num % 2).ToString();\n            num = quot;\n        }\n        string bin = \"\";\n        for (int i = rem.Length - 1; i &gt;= 0; i--)\n        {\n            bin = bin + rem[i];\n        }\n        Console.WriteLine(\"The Binary format for given number is {0}\", bin);\n        Console.Read();\n    }\n}\n"}
{"ID":"114","language":"c#","title":"Convert Decimal to Octal","content":"Convert Decimal to Octal\n\nusing System;\nclass program\n{\n    public static void Main()\n    {\n        int decimalNumber, quotient, i = 1, j;\n        int[] octalNumber = new int[100];\n        Console.WriteLine(\"Enter a Decimal Number :\");\n        decimalNumber = int.Parse(Console.ReadLine());\n        quotient = decimalNumber;\n        while (quotient != 0)\n        {\n            octalNumber[i++] = quotient % 8;\n            quotient = quotient / 8;\n        }\n        Console.Write(\"Equivalent Octal Number is \");\n        for (j = i - 1; j &gt; 0; j--)\n            Console.Write(octalNumber[j]);\n        Console.Read();\n    }\n}\n"}
{"ID":"115","language":"c#","title":"Convert Big Endian to Little Endian","content":"Convert Big Endian to Little Endian\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n \nnamespace ConsoleApplication4\n{\n    class Program\n    {\n        static int ReverseBytes(int val)\n        {\n            byte[] intAsBytes = BitConverter.GetBytes(val);\n            Array.Reverse(intAsBytes);\n            return BitConverter.ToInt32(intAsBytes, 0);\n        }\n        static string IntToBinaryString(int v)\n        {\n            string s = Convert.ToString(v, 2); \n            string t = s.PadLeft(32, '0'); \n            string res = \"\"; \n            for (int i = 0; i &lt; t.Length; ++i)\n            {\n                if (i &gt; 0 &amp;&amp; i % 8 == 0)\n                    res += \" \"; \n                res += t[i];\n            }\n            return res;\n        }\n        static void Main(string[] args)\n        {\n            int little = 2777; \n            int big = ReverseBytes(little);\n            string sLittle = IntToBinaryString(little);\n            string sBig = IntToBinaryString(big);\n            int oLittle = ReverseBytes(big);\n            string oString = IntToBinaryString(oLittle);\n            Console.WriteLine(\"Original (Intel) little endian value = \"\n              + little);\n            Console.WriteLine(\"Original value as binary string = \"\n              + sLittle);\n            Console.WriteLine(\"\");\n            Console.WriteLine(\"Reversed big endian value = \"\n              + big);\n            Console.WriteLine(\"Reversed value as string = \"\n              + sBig);\n            Console.WriteLine(\"\");\n            Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"116","language":"c#","title":"Create an Instance of StackTrace and to Get all Frames","content":"Create an Instance of StackTrace and to Get all Frames\n\nusing System.Diagnostics;\nusing System;\nclass program\n{\n    public static void Main()\n    {\n        StackTrace stackTrace = new StackTrace();    \n               StackFrame[] stackFrames = stackTrace.GetFrames();  \n        // write call stack method names\n        Console.WriteLine(\"Method Names : \");\n        foreach (StackFrame stackFrame in stackFrames)\n        {\n            Console.WriteLine(stackFrame.GetMethod().Name);   \n        }\n        Console.Read();\n    }\n}\n"}
{"ID":"117","language":"c#","title":"Create a Singly Linked Circular List","content":"Create a Singly Linked Circular List\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing SystemText;\nnamespace CSTest\n{\n    class Circlist\n    {\n        private int currentdata;\n        private Circlist nextdata;\n        public Circlist()\n        {\n            currentdata = 0;\n            nextdata = this;\n        }\n        public Circlist(int value)\n        {\n            currentdata = value;\n            nextdata = this;\n        }\n        public Circlist Insdata(int value)\n        {\n            Circlist node = new Circlist(value);\n            if (this.nextdata == this) \n            {\n                node.nextdata = this;\n                this.nextdata = node;\n            }\n            else\n            {\n                Circlist temp = this.nextdata;\n                node.nextdata = temp;\n                this.nextdata = node;\n            }\n            return node;\n        }\n        public int Deldata()\n        {\n            if (this.nextdata == this)\n            {\n                System.Console.WriteLine(\"\nOnly one node!!!!\");\n                return 0;\n            }\n            Circlist node = this.nextdata;\n            this.nextdata = this.nextdata.nextdata;\n            node = null;\n            return 1;\n        }\n        public void Traverse()\n        {\n            Traverse(this);\n        }\n        public void Traverse(Circlist node)\n        {\n            if (node == null)\n                node = this;\n            System.Console.WriteLine(\"Forward Direction!!!!\");\n            Circlist snode = node;\n            do\n            {\n                System.Console.WriteLine(node.currentdata);\n                node = node.nextdata;\n            }\n            while (node != snode);\n        }\n        public int Gnodes()\n        {\n            return Gnodes(this);\n        }\n        public int Gnodes(Circlist node)\n        {\n            if (node == null)\n                node = this;\n            int count = 0;\n            Circlist snode = node;\n            do\n            {\n                count++;\n                node = node.nextdata;\n            }\n            while (node != snode);\n            System.Console.WriteLine(\"\nCurrent Node Value : \" + node.currentdata.ToString());\n            System.Console.WriteLine(\"\nTotal nodes :\" + count.ToString());\n            return count;\n        }\n        static void Main(string[] args)\n        {\n            Circlist node1 = new Circlist(1);\n            node1.Deldata(); \n            Circlist node2 = node1.Insdata(2);\n            node1.Deldata(); \n            node2 = node1.Insdata(2); \n            Circlist node3 = node2.Insdata(3);\n            Circlist node4 = node3.Insdata(4);\n            Circlist node5 = node4.Insdata(5);\n            node1.Gnodes();\n            node3.Gnodes();\n            node5.Gnodes();\n            node1.Traverse();\n            node3.Deldata(); \n            node2.Traverse();\n            node1.Gnodes();\n            node3.Gnodes();\n            node5.Gnodes();\n            Console.Read();\n        }\n    }\n} \n"}
{"ID":"118","language":"c#","title":"Stack with Push and Pop operations","content":"Stack with Push and Pop operations\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {         \n            stack st = new stack();\n          while (true)\n            {\n                Console.Clear();\n                Console.WriteLine(\"\nStack MENU(size -- 10)\");\n                Console.WriteLine(\"1. Add an element\");\n                Console.WriteLine(\"2. See the Top element.\");\n                Console.WriteLine(\"3. Remove top element.\");\n                Console.WriteLine(\"4. Display stack elements.\");\n                Console.WriteLine(\"5. Exit\");\n                Console.Write(\"Select your choice: \");\n                int choice = Convert.ToInt32(Console.ReadLine());\n                switch (choice)\n                {\n                    case 1:\n                        Console.WriteLine(\"Enter an Element : \");\n                        st.Push(Console.ReadLine());\n                        break;\n \n                    case 2: Console.WriteLine(\"Top element is: {0}\", st.Peek());\n                        break;\n \n                   case 3: Console.WriteLine(\"Element removed: {0}\", st.Pop());\n                        break;\n \n                    case 4: st.Display();\n                        break;\n \n                    case 5: System.Environment.Exit(1);\n                        break;\n                }\n                Console.ReadKey();\n            }\n        }\n    }\n \n    interface StackADT\n    {\n        Boolean isEmpty();\n        void Push(Object element);\n        Object Pop();\n        Object Peek();\n        void Display();\n    }\n    class stack : StackADT\n    {\n        private int StackSize;\n        public int StackSizeSet\n        {\n            get { return StackSize; }\n            set { StackSize = value; }\n        }\n        public int top;\n        Object[] item;\n        public stack()\n       {\n           StackSizeSet = 10;\n            item = new Object[StackSizeSet];\n            top = -1;\n        }\n        public stack(int capacity)\n        {\n            StackSizeSet = capacity;\n            item = new Object[StackSizeSet];\n            top = -1;\n        }\n        public bool isEmpty()\n        {\n            if (top == -1) return true;\n \n            return false;\n        }\n        public void Push(object element)\n        {\n            if (top == (StackSize - 1))\n            {\n                Console.WriteLine(\"Stack is full!\");\n            }\n \n            else\n            {\n \n                item[++top] = element;\n                Console.WriteLine(\"Item pushed successfully!\");\n            }\n        }\n        public object Pop()\n        {\n            if (isEmpty())\n            {\n                Console.WriteLine(\"Stack is empty!\");\n                return \"No elements\";\n            }\n            else\n            {\n \n                return item[top--];\n            }\n        }\n        public object Peek()\n        {\n            if (isEmpty())\n            {\n \n                Console.WriteLine(\"Stack is empty!\");\n                return \"No elements\";\n            }\n            else\n            {\n                return item[top];\n            }\n        }\n \n \n        public void Display()\n        {\n            for (int i = top; i &gt; -1; i--)\n            {\n \n                Console.WriteLine(\"Item {0}: {1}\", (i + 1), item[i]);\n            }\n        }\n    }\n}\n"}
{"ID":"119","language":"c#","title":"Traversal in Singly Linked List","content":"Traversal in Singly Linked List\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nnamespace Program\n{\n    class singlelist\n    {\n        private int data;\n        private singlelist next;\n        public singlelist()\n        {\n            data = 0;\n            next = null;\n        }\n        public singlelist(int value)\n        {\n            data = value;\n            next = null;\n        }\n        public singlelist InsertNext(int value)\n        {\n \n            singlelist node = new singlelist(value);\n            if (this.next == null)\n            {\n                node.next = null; \n                this.next = node;\n            }\n           else\n            {\n                singlelist temp = this.next;\n                node.next = temp;\n                this.next = node;\n            }\n            return node;\n        }\n        public int DeleteNext()\n        {\n            if (next == null)\n                return 0;\n            singlelist node = this.next;\n            this.next = this.next.next; \n             node = null;\n            return 1;\n        }\n        public void Traverse(singlelist node)\n        {\n            if (node == null)\n                node = this;\n            System.Console.WriteLine(\"Traversing :\");\n            while (node != null)\n            {\n                System.Console.WriteLine(node.data);\n                node = node.next;\n            }\n        }\n    }\n    class Program}\n    {\n        static void Main(string[] args)\n        {\n            singlelist node1 = new singlelist(11);\n            singlelist node2 = node1.InsertNext(12);\n            singlelist node3 = node2.InsertNext(13);\n            singlelist node4 = node3.InsertNext(14);\n            singlelist node5 = node4.InsertNext(15);\n            node1.Traverse(null);\n            Console.WriteLine(\"Deleting !!\");\n            node3.DeleteNext();\n            node2.Traverse(null);\n            System.Console.ReadLine();\n        }\n    }\n}\n"}
{"ID":"120","language":"c#","title":"List Disk Drives","content":"List Disk Drives}\n\nusing System;\nusing System.IO;\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] driverslist = DriveInfo.GetDrives();\n        foreach (DriveInfo d in driverslist)\n        {\n            Console.WriteLine(\"Drive {0}\", d.Name);\n            Console.WriteLine(\"  File type: {0}\", d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(\" Total size of drive:{0, 15} bytes \",d.TotalSize);\n                Console.Read();\n            }\n        }\n    }\n} \n"}
{"ID":"130","language":"vb","title":"Read a text file to a textbox","content":"Read a text file to a textbox\n     TextBox1.Text = My.Computer.FileSystem.ReadAllText(\"C:your  \n      path\file.txt\")\n"}
{"ID":"131","language":"vb","title":"Generate Random Numbers","content":"Generate Random Numbers\n     Private Sub Button1_Click(ByVal sender As System.Object, \n     ByVal e As System.EventArgs) Handles Button1.Click\n\n     Dim number As Integer\n  \n     Randomize()\n     ' The program will generate a number from 0 to 50\n     number = Int(Rnd() * 50) + 1\n \n     TextBox1.Text = number\n     End Sub\n"}
{"ID":"132","language":"vb","title":"Validate numbers then average out scores","content":"Validate numbers then average out scores\n     Private Sub Button1_Click_1(ByVal sender As System.Object, ByVal e As \n      System.EventArgs) _Handles Button1.Click\n     With TextBox1\n     If Not IsNumeric(.Text) And .Text &lt;&gt; vbNullString Then\n     MsgBox(\"Sorry, only numbers allowed\").Text = \"\"\n     Else\n     With TextBox2\n     If Not IsNumeric(.Text) And .Text &lt;&gt; vbNullString Then\n     MsgBox(\"Sorry, only numbers allowed\").Text = \"\"\n     Else\n     MsgBox(\"The Average is \" &amp; (Val(TextBox1.Text) + Val(TextBox2.Text))  \n     / 2)\n     End If\n     End With\n     End If\n     End With\n     End Sub\n"}
{"ID":"133","language":"vb","title":"Calculate Age","content":"Calculate Age\n     Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As \n     System.EventArgs) _Handles Button1.Click\n     Dim a As String\n     Dim b As String\n     Dim c As String\n     a = TextBox3.Text\n     b = TextBox1.Text\n     c = TextBox2.Text\n     Dim DOB As New DateTime(a, b, c)\n     Dim Years As Integer = DateDiff(DateInterval.Year, DOB, Now) - 1\n     Dim Months As Integer = DateDiff(DateInterval.Month, DOB, Now) Mod \n       12\n     Dim days As Integer = DateDiff(DateInterval.Day, DOB, Now) Mod 30 - \n     10\n     TextBox4.Text = Years &amp; \" Years, \" &amp; Months &amp; \" Months \"\n     End Sub\n"}
{"ID":"134","language":"vb","title":"Inverted an image","content":"Inverted an image\n     Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As        System.EventArgs) Handles Button1.Click\n     Dim pic As New Bitmap(PictureBox1.Image)\n    For y As Integer = 0 To pic.Height - 1\n     For x As Integer = 0 To pic.Width - 1\n     Dim inv As Color = pic.GetPixel(x, y)\n     inv = Color.FromArgb(255, 255 - inv.R, 255 - inv.G, 255 - inv.B)\n     pic.SetPixel(x, y, inv)\n     PictureBox2.Image = pic\n     Next x\n     Next y\n     End Sub\n"}
{"ID":"135","language":"vb","title":"Validate Phone Number","content":"Validate Phone Number\n     Private Sub Button1_Click_1(sender As System.Object, _\n     e As System.EventArgs) Handles Button1.Click\n     Dim phoneNumber As New Regex(\"(d{3})d{3}-d{4}\")\n     If phoneNumber.IsMatch(TextBox1.Text) Then\n     TextBox2.Text = \"Valid phone number\"\n     Else\n     TextBox2.Text = \"Not Valid phone number\"\n     End If\n    End Sub\n"}
{"ID":"136","language":"vb","title":"Function to Validate Double Value","content":"Function to Validate Double Value\n      Function validateDoublesAndCurrency(stringValue As String) As Boolean\n     Dim rslt As Boolean = False\n     Dim value As Double\n     Dim valueToTest As String = stringValue\n     Try\n     'check if value to be tested contains a currency symbol such as a dollar \n      sign ($)\n     valueToTest = Double.Parse(stringValue,\n      Globalization.NumberStyles.Currency)\n     Catch ex As Exception\n \n     End Try\n     'check if double\n     If Double.TryParse(valueToTest, value) Then\n     'value is double\n     rslt = True\n     Else\n     'value is not double\n     rslt = False\n     End If\n     Return rslt\n     End Function\n"}